name = "my-worker" # replace with your worker name
# Example account_id — set from your Cloudflare account
account_id = "5a6c75ee2f334a79233aeebffda06de5"
# By default use "javascript"; set to "webpack" or "modules" if using bundling
compatibility_date = "2025-10-27"

# Type can be "javascript" or "webpack" depending on your setup
lang = "javascript"

# Optional: specify a branch to deploy to (if using git-based workflows)
# branch = "main"

# Optional: route or routes — uncomment and edit if you want Wrangler to manage routes
# route = "example.com/*"
# routes = ["example.com/*", "api.example.com/*"]

# ---------------------------
# KV Namespaces
# ---------------------------
# The following maps a KV namespace into your Worker as the binding `REKO_KV`.
# The `id` is the namespace id (you can find it in Cloudflare dashboard or in your .env).
[[kv_namespaces]]
binding = "REKO_KV"
id = "89337288d9564a449eb99664973aa3cb"

# If you have additional KV namespaces, add more [[kv_namespaces]] blocks.
# Example:
# [[kv_namespaces]]
# binding = "MY_OTHER_KV"
# id = "<other-kv-id>"

# ---------------------------
# R2 buckets
# ---------------------------
# Example R2 bucket binding. Replace `bucket_name` with your actual R2 bucket name.
# The `binding` is the global variable name available to the Worker at runtime.
[[r2_buckets]]
binding = "REKO_R2"
bucket_name = "my-reko-r2-bucket"
# preview_bucket_name = "my-reko-r2-bucket-preview" # optional for preview envs

# ---------------------------
# Worker variables (optional)
# ---------------------------
# Use [vars] for small config values you want baked into the worker at publish time.
[vars]
WORKER_BASE = "https://bpjs-reko.mkemalw.workers.dev"

# ---------------------------
# Notes
# ---------------------------
# - Avoid committing long-lived secrets (API tokens) into the repository. Use `wrangler secret put` to store secrets.
# - If you prefer not to hard-code IDs here, you can keep placeholders and set them per-environment using `wrangler secret put` or CI secrets.
# - After editing this file, run `wrangler publish` from the project root to deploy.
